package com.bham.finalyearproject.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GlobalLeaderboardAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGlobalLeaderboardAllPropertiesEquals(GlobalLeaderboard expected, GlobalLeaderboard actual) {
        assertGlobalLeaderboardAutoGeneratedPropertiesEquals(expected, actual);
        assertGlobalLeaderboardAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGlobalLeaderboardAllUpdatablePropertiesEquals(GlobalLeaderboard expected, GlobalLeaderboard actual) {
        assertGlobalLeaderboardUpdatableFieldsEquals(expected, actual);
        assertGlobalLeaderboardUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGlobalLeaderboardAutoGeneratedPropertiesEquals(GlobalLeaderboard expected, GlobalLeaderboard actual) {
        assertThat(expected)
            .as("Verify GlobalLeaderboard auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGlobalLeaderboardUpdatableFieldsEquals(GlobalLeaderboard expected, GlobalLeaderboard actual) {
        assertThat(expected)
            .as("Verify GlobalLeaderboard relevant properties")
            .satisfies(e -> assertThat(e.getRank()).as("check rank").isEqualTo(actual.getRank()))
            .satisfies(e -> assertThat(e.getTotalPoints()).as("check totalPoints").isEqualTo(actual.getTotalPoints()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGlobalLeaderboardUpdatableRelationshipsEquals(GlobalLeaderboard expected, GlobalLeaderboard actual) {
        assertThat(expected)
            .as("Verify GlobalLeaderboard relationships")
            .satisfies(e -> assertThat(e.getStudent()).as("check student").isEqualTo(actual.getStudent()));
    }
}
